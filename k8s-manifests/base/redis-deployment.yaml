apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  labels:
    app: redis
    component: cache
    app.kubernetes.io/name: titanium
    app.kubernetes.io/component: redis
spec:
  replicas: 1  # Redis는 단일 인스턴스로 운영 (overlay에서 클러스터 모드 변경 가능)
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
        component: cache
        app.kubernetes.io/name: titanium
        app.kubernetes.io/component: redis
    spec:
      containers:
      - name: redis-container
        image: redis:7-alpine  # 안정적인 버전 사용
        ports:
        - containerPort: 6379
          name: redis
        env:
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_DATABASES
          value: "16"
        command:
        - redis-server
        - --appendonly
        - "yes"
        - --save
        - "900 1"
        - --save
        - "300 10"
        - --save
        - "60 10000"
        resources:  # overlay에서 오버라이드
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 999  # redis user
          readOnlyRootFilesystem: false  # Redis는 데이터 쓰기 필요
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config
          mountPath: /usr/local/etc/redis
      volumes:
      - name: redis-data
        emptyDir: {}  # overlay에서 PVC로 변경 가능
      - name: redis-config
        emptyDir: {}