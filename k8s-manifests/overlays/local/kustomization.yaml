# TItanium/k8s-manifests/overlays/local/kustomization.yaml

apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

# 1. 사용할 base와 로컬 환경 전용 리소스(네임스페이스 등)를 지정합니다.
resources:
- ../../base
- namespace.yaml # 로컬용 네임스페이스 정의 파일

# 2. 로컬 환경의 모든 리소스에 공통적으로 적용될 접두사와 네임스페이스를 지정합니다.
namePrefix: local-
namespace: titanium-local

# 3. 로컬 환경에서는 모든 서비스의 복제본(replica) 수를 1로 설정합니다.
replicas:
- name: api-gateway-deployment
  count: 1
- name: auth-service-deployment
  count: 1
- name: dashboard-ui-deployment
  count: 1
- name: load-balancer-deployment
  count: 1
- name: user-service-deployment
  count: 1
- name: redis-deployment
  count: 1
- name: blog-service-deployment
  count: 1
- name: analytics-service-deployment
  count: 1

# 4. 로컬 환경에 맞는 ConfigMap 값을 설정합니다.
configMapGenerator:
- name: app-config
  behavior: merge # base의 내용과 병합
  literals:
  - ENVIRONMENT=local
  - LOG_LEVEL=DEBUG
  - CORS_ALLOWED_ORIGINS=*
  - API_GATEWAY_URL=http://local-api-gateway-service:8000
  - USER_SERVICE_URL=http://local-user-service:8001
  - AUTH_SERVICE_URL=http://local-auth-service:8002
  - BLOG_SERVICE_URL=http://local-blog-service:8005
  - REDIS_HOST=local-redis-service
  - DASHBOARD_UI_URL=http://local-dashboard-ui-service:80

# 5. 특정 리소스의 일부 필드만 수정하는 '패치(patch)'를 적용합니다.
patches:
  # Load Balancer 서비스를 외부에서 접근 가능하도록 NodePort 타입으로 변경
  - target:
      kind: Service
      name: load-balancer-service
    patch: |-
      - op: replace
        path: /spec/type
        value: NodePort
      - op: add
        path: /spec/ports/0/nodePort
        value: 30700
        
  # user-service-deployment가 올바른 PVC 이름을 참조하도록 패치를 추가합니다.
  - target:
      kind: Deployment
      name: user-service-deployment
    patch: |-
      - op: replace
        path: /spec/template/spec/volumes/0/persistentVolumeClaim/claimName
        value: local-user-service-data-pvc

  - target:
      kind: Deployment
    patch: |-
      - op: replace
        path: /spec/template/spec/containers/0/imagePullPolicy
        value: IfNotPresent
